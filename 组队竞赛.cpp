/*【题目解析】：
队伍的水平值等于该队伍队员中第二高水平值，为了所有队伍的水平值总和最大的解法，也就是说每个队伍
的第二个值是尽可能大的值。所以实际值把最大值放到最右边，最小是放到最左边。
【解题思路】：
本题的主要思路是贪心算法，贪心算法其实很简单，就是每次选值时都选当前能看到的局部最解忧，所
以这里的贪心就是保证每组的第二个值取到能选择的最大值就可以，我们每次尽量取最大，但是最大的
数不可能是中位数，所以退而求其次，取 每组中第二大的
排序，然后取下标为3n - 2，3n - 4 ，3n - 4...n + 2，n位置的元素累加即可，相当下标为[0, n - 1]的n个数
做每组的最左边的数，剩下的2个数据两个为一组，大的值做最右边的数，次大的做中间值，这里就是
把这个次大的值加起来。
例如 现在排序后 有 1 2 5 5 8 9 ，那么取 8 和 5相加等于 13 */

#if 0
#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;

int main()
{
	int n = 0;
	//可能有多组输入
	while (cin >> n)
	{
		long long sum = 0; 
		vector<int> arr;
		arr.resize(n * 3);
		for (int i = 0; i < n * 3; i++)
		{
			cin >> arr[i];
		}
		//由小到大排序
		std::sort(arr.begin(), arr.end());
		//每次取次大的
		//从第n个值开始取因为[0,n]是最小的n个数，要分成n组
		//将[0,n]的数每个组分配一个当作最小的，然后将剩下的数两两一组，大的做大值，小的做中间值
		//j+=2, 就是下标每次移动都是取n位之后的两两一组的次大值
		for (int j = n; j < 3 * n - 2; j += 2)
		{
			sum += arr[j];
		}
		cout << sum << endl;
	}
	return 0;
}
#endif