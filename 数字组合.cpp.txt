#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
using namespace std;
#if 0
例如： 
1^3=1             n*(n-1) + 1
2^3=3+5 
3^3=7+9+11 
4^3=13+15+17+19 
编程实现：输入一自然数n，求组成n^3的n个连续奇数。
int main()
{
	int num = 0;
	cin >> num;
	int tmp = num * (num - 1) + 1;
	cout << num << " ^ 3 = ";
	cout << tmp;
	cout << " + ";
	for (int i = 1; i < num; i++)
	{
		tmp += 2;
		cout << tmp;
		if (i + 1 < num)
		{
			cout << " + ";
		}
	}
	cout << endl;
	return 0;
 }

#endif

#if 0
输入一个五位以内的正整数，（1）判断它是一个几位数；（2）请按序输出其各位数字；（3）逆序输出其各位数字。 
如输入：56439，输出：5位数 
5，6，4，3，9 
9，3，4，6，5
int main()
{
	int num;
	int arr[5] = { -1 * 5 };
	cin >> num;
	int tmp = num;
	int count = 0;
	for (int i = 0; tmp != 0; i++)
	{
		count++;
		arr[i] = tmp % 10;
		tmp = tmp / 10;
	}
	cout << "逆序打印：" << endl;
	for (int i = 0; i < 5; i++)
		cout << arr[i] << " ";
	cout << endl;
	cout << "正序" << endl;
	for (int i = count - 1; i >= 0; i--)
		cout << arr[i] << " ";
	cout << endl;
	return 0;
}

输入18位证件号，将奇位数的值相加的和求的平均数X，偶位数先与3相乘得到的个位数的和的平均数y。如果（X + Y）是10的倍数，则证件号正确，否则则错误。请编写程序验证证件号是否正确。（12分）
列入输入：431023198919230939
输出：正确
#endif



int main()
{
	char arr[18] = { 0 };
	int arr1[18] = { 0 };
	int arr2[10] = { 0 };
	int arr3[10] = { 0 };
	int i = 0;
	int j = 1;
	cin >> arr;
	for (i = 0; i < 18; i++)
	{
		arr1[i] = arr[i] - '0';
	}
	for (i = 0; i < 18; i += 2)
	{
		arr2[j++] = arr1[i];
	}
	j = 1;
	for (i = 1; i < 18; i += 2)
	{
		arr3[j++] = arr1[i];
	}
	
	for (auto e : arr2)
	{
		arr2[0] += e;
	}
	int X = arr2[0] / 9;
	for (auto e : arr3)
	{
		arr3[0] += e * 3 % 10;
	}
	int Y = arr3[0] / 9;
	if ((X + Y) / 10 == 0)
		cout << "正确" << endl;
	else
		cout << "错误" << endl;
	return 0;
}